从PHP 7升级到PHP 8，你需要了解和掌握的知识点主要包括以下几个方面：

新特性：PHP 8引入了许多新特性，如JIT（Just-In-Time）编译器、协程（Coroutines）、异常处理的改进、属性（Attributes）、匿名类、匿名函数的改进等。理解这些新特性对于有效利用PHP 8的性能和功能至关重要。
废弃的特性和函数：PHP 8中有一些特性和函数被废弃或移除，如某些魔术方法、array_key_exists()函数的行为变化等。在升级过程中，需要检查代码中是否使用了这些特性和函数，并进行相应的修改。
类型系统的改进：PHP 8对类型系统进行了重大改进，包括Union Types、Nullsafe Operator、Readonly Properties等。理解这些改进对于编写更安全、更清晰的代码至关重要。
性能优化：PHP 8的JIT编译器可以显著提高PHP代码的执行速度。了解如何利用JIT编译器的优势，以及在升级过程中可能需要做的性能调优，是非常重要的。
错误处理和异常：PHP 8对错误处理和异常的处理方式进行了改进，包括新的错误类型和异常处理机制。理解这些改变对于编写健壮的代码至关重要。
兼容性问题：在升级过程中，可能会遇到一些兼容性问题，如函数的行为变化、类型系统的改变等。需要对这些问题进行兼容性测试，并根据需要进行代码调整。
测试和验证：在升级到PHP 8后，建议对代码进行全面的测试和验证，以确保代码的正确性和性能。可以使用PHPUnit等测试框架进行单元测试和集成测试。
总之，从PHP 7升级到PHP 8需要全面了解PHP 8的新特性、废弃的特性、类型系统的改进、性能优化、错误处理和异常处理机制，以及如何解决可能出现的兼容性问题。同时，进行充分的测试和验证是确保升级成功的关键。